import getClientRect from '../utils/getClientRect';
import mathFloor from '../utils/mathFloor';

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
export default function keepTogether(data) {
  const popper = getClientRect(data.offsets.popper);
  const reference = data.offsets.reference;
  const placement = data.placement.split('-')[0];
  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
  const side = isVertical ? 'right' : 'bottom';
  const opSide = isVertical ? 'left' : 'top';
  const measurement = isVertical ? 'width' : 'height';

  if (popper[side] < mathFloor(reference[opSide])) {
    data.offsets.popper[opSide] =
      mathFloor(reference[opSide]) - popper[measurement];
  }
  if (popper[opSide] > mathFloor(reference[side])) {
    data.offsets.popper[opSide] = mathFloor(reference[side]);
  }

  return data;
}
