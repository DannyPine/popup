{"id":"../src/methods/disableEventListeners.js","dependencies":[{"name":"/Users/wwu/workspace/popper.js/packages/popper/.babelrc","includedInParent":true,"mtime":1549495462365},{"name":"/Users/wwu/workspace/popper.js/packages/popper/package.json","includedInParent":true,"mtime":1549496460410},{"name":"../utils/removeEventListeners","loc":{"line":1,"column":33},"parent":"/Users/wwu/workspace/popper.js/packages/popper/src/methods/disableEventListeners.js","resolved":"/Users/wwu/workspace/popper.js/packages/popper/src/utils/removeEventListeners.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = disableEventListeners;\n\nvar _removeEventListeners = _interopRequireDefault(require(\"../utils/removeEventListeners\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = (0, _removeEventListeners.default)(this.reference, this.state);\n  }\n}","map":{"mappings":[{"generated":{"line":8,"column":0},"source":"../src/methods/disableEventListeners.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"../src/methods/disableEventListeners.js","original":{"line":3,"column":0}},{"generated":{"line":19,"column":0},"source":"../src/methods/disableEventListeners.js","original":{"line":10,"column":15}},{"name":"disableEventListeners","generated":{"line":19,"column":9},"source":"../src/methods/disableEventListeners.js","original":{"line":10,"column":24}},{"generated":{"line":19,"column":30},"source":"../src/methods/disableEventListeners.js","original":{"line":10,"column":15}},{"generated":{"line":19,"column":33},"source":"../src/methods/disableEventListeners.js","original":{"line":10,"column":48}},{"generated":{"line":20,"column":0},"source":"../src/methods/disableEventListeners.js","original":{"line":11,"column":2}},{"generated":{"line":20,"column":6},"source":"../src/methods/disableEventListeners.js","original":{"line":11,"column":6}},{"name":"state","generated":{"line":20,"column":11},"source":"../src/methods/disableEventListeners.js","original":{"line":11,"column":11}},{"generated":{"line":20,"column":16},"source":"../src/methods/disableEventListeners.js","original":{"line":11,"column":6}},{"name":"eventsEnabled","generated":{"line":20,"column":17},"source":"../src/methods/disableEventListeners.js","original":{"line":11,"column":17}},{"generated":{"line":20,"column":30},"source":"../src/methods/disableEventListeners.js","original":{"line":11,"column":2}},{"generated":{"line":20,"column":32},"source":"../src/methods/disableEventListeners.js","original":{"line":11,"column":32}},{"name":"cancelAnimationFrame","generated":{"line":21,"column":0},"source":"../src/methods/disableEventListeners.js","original":{"line":12,"column":4}},{"name":"cancelAnimationFrame","generated":{"line":21,"column":4},"source":"../src/methods/disableEventListeners.js","original":{"line":12,"column":4}},{"generated":{"line":21,"column":24},"source":"../src/methods/disableEventListeners.js","original":{"line":12,"column":24}},{"generated":{"line":21,"column":25},"source":"../src/methods/disableEventListeners.js","original":{"line":12,"column":25}},{"name":"scheduleUpdate","generated":{"line":21,"column":30},"source":"../src/methods/disableEventListeners.js","original":{"line":12,"column":30}},{"generated":{"line":21,"column":44},"source":"../src/methods/disableEventListeners.js","original":{"line":12,"column":24}},{"generated":{"line":21,"column":45},"source":"../src/methods/disableEventListeners.js","original":{"line":12,"column":4}},{"generated":{"line":22,"column":0},"source":"../src/methods/disableEventListeners.js","original":{"line":13,"column":4}},{"name":"state","generated":{"line":22,"column":9},"source":"../src/methods/disableEventListeners.js","original":{"line":13,"column":9}},{"generated":{"line":22,"column":14},"source":"../src/methods/disableEventListeners.js","original":{"line":13,"column":4}},{"generated":{"line":22,"column":17},"source":"../src/methods/disableEventListeners.js","original":{"line":13,"column":17}},{"generated":{"line":22,"column":52},"source":"../src/methods/disableEventListeners.js","original":{"line":13,"column":38}},{"name":"reference","generated":{"line":22,"column":57},"source":"../src/methods/disableEventListeners.js","original":{"line":13,"column":43}},{"generated":{"line":22,"column":66},"source":"../src/methods/disableEventListeners.js","original":{"line":13,"column":17}},{"generated":{"line":22,"column":68},"source":"../src/methods/disableEventListeners.js","original":{"line":13,"column":54}},{"name":"state","generated":{"line":22,"column":73},"source":"../src/methods/disableEventListeners.js","original":{"line":13,"column":59}},{"generated":{"line":22,"column":78},"source":"../src/methods/disableEventListeners.js","original":{"line":13,"column":17}},{"generated":{"line":22,"column":79},"source":"../src/methods/disableEventListeners.js","original":{"line":13,"column":4}},{"generated":{"line":23,"column":0},"source":"../src/methods/disableEventListeners.js","original":{"line":14,"column":3}},{"generated":{"line":24,"column":0},"source":"../src/methods/disableEventListeners.js","original":{"line":15,"column":1}}],"sources":{"../src/methods/disableEventListeners.js":"import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n"},"lineCount":null}},"hash":"097e80bc64d78108aa19987c659f40b8","cacheData":{"env":{}}}